/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EntityTrading,
  EntityTradingInterface,
} from "../../../contracts/EntityTrading/EntityTrading";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_traitForgeNft",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ListingCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nukeFundContribution",
        type: "uint256",
      },
    ],
    name: "NFTSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NukeFundContribution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listNFTForSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listedTokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "contract ITraitForgeNft",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nukeFundAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_nukeFundAddress",
        type: "address",
      },
    ],
    name: "setNukeFundAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxCut",
        type: "uint256",
      },
    ],
    name: "setTaxCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taxCut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100c957601f61109a38819003918201601f19168301916001600160401b038311848410176100ce578084926020946040528339810103126100c957516001600160a01b0390818116908190036100c957600160005560015460405192339082167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a81b0319163360ff60a01b1916176001556103e86004556000600555600280546001600160a01b031916919091179055610fb590816100e58239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001457600080fd5b600091823560e01c8063023f2dbe14610d7a578063305a67a814610bc95780633f4ba83a14610b2d57806351ed8288146107c65780635c448e9a146107a85780635c975abb14610781578063715018a6146107205780638456cb59146106bf5780638da5cb5b14610696578063a9b07c2614610677578063b2733b39146102f0578063b6feadc8146102c8578063c023eed614610259578063d56d229d14610230578063de74e57b146101d9578063ee9151ae146101ac5763f2fde38b146100db57600080fd5b346101a85760203660031901126101a8576001600160a01b038235818116939192908490036101a45761010c610dbe565b8315610152575050600154826001600160601b0360a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b8382346101d557816003193601126101d55760035490516001600160a01b039091168152602090f35b5080fd5b5090346101a85760203660031901126101a85760809282913581526007602052209060018060a01b038254169160018101549160ff6003600284015493015416928151948552602085015283015215156060820152f35b8382346101d557816003193601126101d55760025490516001600160a01b039091168152602090f35b5090346101a85760203660031901126101a857803591610277610dbe565b612710831161028557505580f35b906020606492519162461bcd60e51b8352820152601a60248201527f546178206375742063616e6e6f742065786365656420313030250000000000006044820152fd5b5090346101a85760203660031901126101a85760209282913581526006845220549051908152f35b508290346101d557806003193601126101d55782356024803592610312610e16565b61031a610ee9565b83156106355760025481516331a9108f60e11b81528781018590526020936001600160a01b039290919083169085818481855afa90811561059f578991610618575b5083339116036105d657835163020604bf60e21b815289810187905285818481855afa90811561059f5789916105a9575b50831630148015610532575b156104d957803b156104d55783516323b872dd60e01b815233818b01908152306020820152604081018890529091899183919082908490829060600103925af180156104cb579088916104b3575b50506005549760001989146104a2575050600360017f5f9c03de076f5063cd3ebcfe8ef7aa8af378e4b35a83c77ba9777e97083879a29596979801918260055583519061043382610e87565b338252858201888152858301918a83526060840195600187528c5260078852868c209351166001600160601b0360a01b845416178355516001830155516002820155019051151560ff801983541691161790556005548487526006835281872055519384523393a36001815580f35b634e487b7160e01b88526011905286fd5b6104bc90610e5d565b6104c75786896103e7565b8680fd5b84513d8a823e3d90fd5b8780fd5b835162461bcd60e51b8152808a01869052602e818401527f436f6e7472616374206d75737420626520617070726f76656420746f2074726160448201526d3739b332b9103a34329027232a1760911b6064820152608490fd5b50835163e985e9c560e01b8152338a82015230838201528581604481855afa90811561059f578991610565575b50610399565b90508581813d8311610598575b61057c8183610ea3565b8101031261059457518015158103610594578a61055f565b8880fd5b503d610572565b85513d8b823e3d90fd5b6105c99150863d88116105cf575b6105c18183610ea3565b810190610ec5565b8a61038d565b503d6105b7565b835162461bcd60e51b8152808a01869052601d818401527f53656e646572206d75737420626520746865204e4654206f776e65722e0000006044820152606490fd5b61062f9150863d88116105cf576105c18183610ea3565b8a61035c565b601f60649260208893519362461bcd60e51b85528401528201527f5072696365206d7573742062652067726561746572207468616e207a65726f006044820152fd5b8382346101d557816003193601126101d5576020906005549051908152f35b8382346101d557816003193601126101d55760015490516001600160a01b039091168152602090f35b8382346101d557816003193601126101d55760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916106fd610dbe565b610705610e16565b6001805460ff60a01b1916600160a01b17905551338152a180f35b833461077e578060031936011261077e57610739610dbe565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b8382346101d557816003193601126101d55760209060ff60015460a01c1690519015158152f35b5090346101a857826003193601126101a85760209250549051908152f35b509060209182600319360112610b29578135906107e1610e16565b6107e9610ee9565b81855260068452808520548552600784528085209080519161080a83610e87565b80546001600160a01b039081168452600182015487850152600282015483850181905260039092015460ff1615156060850152903403610ad4578083511615610a91578454803402903482041434151715610a7e57612710900494853403348111610a6b5782600354168015610a28578980808a81945af161088a610f3f565b50156109e757888080809387518b81527f92b97b7affc547d31d01727584b467cfa1b473919e75358f22cd0ecb8c3d22e58d3092a2868951165af16108cd610f3f565b50156109a45787908260025416803b156101a85784516323b872dd60e01b81523092810192835233602084015260408301889052918391839182908490829060600103925af1801561099a57610986575b5092847f5fafad85dec201c2e73b6a2bef6351129304a624ea8720ecd04cd7f04d83bc399452600687528288205488526007875261097083892060036000918281558260018201558260028201550155565b5116938151953487528601523394a46001815580f35b61098f90610e5d565b6104c757863861091e565b84513d84823e3d90fd5b825162461bcd60e51b8152908101879052601860248201527f4661696c656420746f2073656e6420746f2073656c6c657200000000000000006044820152606490fd5b606482898087519262461bcd60e51b845283015260248201527f4661696c656420746f2073656e6420457468657220746f204e756b6546756e646044820152fd5b845162461bcd60e51b81528084018a9052601860248201527f4e756b6546756e642061646472657373206e6f742073657400000000000000006044820152606490fd5b634e487b7160e01b895260118252602489fd5b634e487b7160e01b885260118652602488fd5b815162461bcd60e51b8152808601879052601b60248201527f4e4654206973206e6f74206c697374656420666f722073616c652e00000000006044820152606490fd5b815162461bcd60e51b8152808601879052602960248201527f4554482073656e7420646f6573206e6f74206d6174636820746865206c697374604482015268696e6720707269636560b81b6064820152608490fd5b8380fd5b5090346101a857826003193601126101a857610b47610dbe565b6001549060ff8260a01c1615610b8f575060ff60a01b1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b50346101a857602080600319360112610b2957823592610be7610e16565b610bef610ee9565b838552600682528285205485526007825282852080546001600160a01b03919082163303610d28576003015460ff1615610ced5785906002541691823b156101d55784516323b872dd60e01b8152309181019182523360208301526040820187905292839182908490829060600103925af18015610ce357610cc9575b50906007610c9c928486526006815282862054865252832060036000918281558260018201558260028201550155565b33907fbb7be15645f4eda9d65591c3a81b5e39256151f91bc25180315de259167c2e238380a36001815580f35b610c9c929194610cda600792610e5d565b94919250610c6c565b83513d87823e3d90fd5b50915162461bcd60e51b81529182015260166024820152752634b9ba34b7339034b9903737ba1030b1ba34bb329760511b6044820152606490fd5b845162461bcd60e51b8152808401859052602660248201527f4f6e6c79207468652073656c6c65722063616e2063616e656c20746865206c6960448201526539ba34b7339760d11b6064820152608490fd5b5050346101d55760203660031901126101d557356001600160a01b038116908190036101d557610da8610dbe565b6001600160601b0360a01b600354161760035580f35b6001546001600160a01b03163303610dd257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff60015460a01c16610e2557565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b67ffffffffffffffff8111610e7157604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff821117610e7157604052565b90601f8019910116810190811067ffffffffffffffff821117610e7157604052565b90816020910312610ee457516001600160a01b0381168103610ee45790565b600080fd5b600260005414610efa576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b3d15610f7a573d9067ffffffffffffffff8211610e715760405191610f6e601f8201601f191660200184610ea3565b82523d6000602084013e565b60609056fea2646970667358221220c99c1c17013ac25bc18beee8e5b02ba94fb7f2644a47e15c412f35269b1313d964736f6c63430008140033";

type EntityTradingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntityTradingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntityTrading__factory extends ContractFactory {
  constructor(...args: EntityTradingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _traitForgeNft: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_traitForgeNft, overrides || {});
  }
  override deploy(
    _traitForgeNft: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_traitForgeNft, overrides || {}) as Promise<
      EntityTrading & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EntityTrading__factory {
    return super.connect(runner) as EntityTrading__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntityTradingInterface {
    return new Interface(_abi) as EntityTradingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EntityTrading {
    return new Contract(address, _abi, runner) as unknown as EntityTrading;
  }
}
