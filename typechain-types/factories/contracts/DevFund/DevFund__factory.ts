/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DevFund,
  DevFundInterface,
} from "../../../contracts/DevFund/DevFund";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dev",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "AddDev",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dev",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dev",
        type: "address",
      },
    ],
    name: "RemoveDev",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dev",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "UpdateDev",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "addDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "devInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingRewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "removeDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDevWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewardDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "updateDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608080604052346100695760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805560ff1960025416600255610ac5908161006f8239f35b600080fdfe6040608081526004803610156100ea575b361561001b57600080fd5b600354156100c6576003549081156100b15761004e610046610040843404948561098d565b346109b6565b9282546109c3565b905580610084575b505b513481527f54a5b8782470a0d2c022b3b9e5e729503ac5dbdfe053afeb4559f9297f7565a660203392a2005b600080546100ab928291829182916001600160a01b03165af16100a56108e0565b50610941565b38610056565b601290634e487b7160e01b6000525260246000fd5b506100e5600080808060018060a01b0381541634905af16100a56108e0565b610058565b6000803560e01c806331d7a262146108175780633f4ba83a146107805780633f6d88d3146106c55780634e71d92d146105695780635c975abb146105455780636470e35114610526578063715018a6146104c957806383bb3877146104aa5780638456cb591461044f5780638da5cb5b14610427578063c4026d7b14610375578063cceb0fbc14610323578063e51fccad146102575763f2fde38b146101905750610010565b919034610253576020366003190112610253576101ab61086d565b906101b4610888565b6001600160a01b0391821692831561020157505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50913461025357806003193601126102535761027161086d565b906024359161027e610888565b6001600160a01b03168085526005602052818520909361029f841515610a14565b81546102eb5791837f031b559139a68ada1ee9378b9d60bed1a9e1bff91d96a2d4ab9c1110e8810d619492602094546001820155556102e0826003546109c3565b60035551908152a280f35b606490602084519162461bcd60e51b83528201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b6044820152fd5b5082346103715760203660031901126103715760609181906001600160a01b0361034b61086d565b168152600560205220805491600260018301549201549181519384526020840152820152f35b5080fd5b50809291346103715760203660031901126103715761039261086d565b61039a610888565b6001600160a01b0316808352600560205292822080549091906103ca906103c2811515610a51565b6003546109b6565b6003558054906103eb6103e360018501938454906109b6565b84549061098d565b6103fa600285019182546109c3565b9055549055557f45867a7042effa572a3eca706a15679b95cf7b7f6d2958475d2762d4e5877be28280a280f35b508234610371578160031936011261037157905490516001600160a01b039091168152602090f35b50823461037157816003193601126103715760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161048d610888565b6104956109d0565b600160ff19600254161760025551338152a180f35b5091903461025357826003193601126102535760209250549051908152f35b50346105235780600319360112610523576104e2610888565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5082346103715781600319360112610371576020906003549051908152f35b50823461037157816003193601126103715760209060ff6002541690519015158152f35b509190346102535782600319360112610253576105846109d0565b60026001541461068357600260015533835260056020528183209160028301906105cd82546105c78554966105bf60018201988954906109b6565b90549061098d565b906109c3565b91826105e1575b5050505490556001805580f35b824780821161067b575b508680808087335af16105fc6108e0565b5015610640578361060c916109b6565b9055519081527f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d460203392a23880806105d4565b825162461bcd60e51b8152602081870152601560248201527411985a5b1959081d1bc81cd95b990814995dd85c99605a1b6044820152606490fd5b9350386105eb565b6020606492519162461bcd60e51b8352820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b50913461025357806003193601126102535760207f6a2b58960125431879eae70c9d6949bffd9c8aa20bb0d6ea5b432d00a9b16a229161070361086d565b906024358092610711610888565b6001600160a01b0316808852600585528288209096610731831515610a14565b61074a8361074584546103c2811515610a51565b6109c3565b6003558054906107636103e360018501938454906109b6565b610772600285019182546109c3565b90555490555551908152a280f35b5091903461025357826003193601126102535761079b610888565b6002549060ff8216156107dd575060ff1916600255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b509190346102535760203660031901126102535760209261086691906105c79084906001600160a01b0361084961086d565b16815260058752206105bf600282015493546001830154906109b6565b9051908152f35b600435906001600160a01b038216820361088357565b600080fd5b6000546001600160a01b0316330361089c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b3d1561093c5767ffffffffffffffff903d8281116109265760405192601f8201601f19908116603f01168401908111848210176109265760405282523d6000602084013e565b634e487b7160e01b600052604160045260246000fd5b606090565b1561094857565b60405162461bcd60e51b815260206004820152601d60248201527f4661696c656420746f2073656e6420457468657220746f206f776e65720000006044820152606490fd5b818102929181159184041417156109a057565b634e487b7160e01b600052601160045260246000fd5b919082039182116109a057565b919082018092116109a057565b60ff600254166109dc57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b15610a1b57565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b15610a5857565b60405162461bcd60e51b815260206004820152600f60248201526e4e6f7420646576206164647265737360881b6044820152606490fdfea2646970667358221220cde7f657cbd14cca48faec0ecc9bc502640249d48a44937e2cbaa67c8ef838b664736f6c63430008140033";

type DevFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DevFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DevFund__factory extends ContractFactory {
  constructor(...args: DevFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DevFund & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DevFund__factory {
    return super.connect(runner) as DevFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DevFundInterface {
    return new Interface(_abi) as DevFundInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DevFund {
    return new Contract(address, _abi, runner) as unknown as DevFund;
  }
}
