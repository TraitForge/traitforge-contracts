/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Airdrop,
  AirdropInterface,
} from "../../../contracts/Airdrop/Airdrop";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addUserAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "airdropStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allowDaoFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "daoFundAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_traitToken",
        type: "address",
      },
    ],
    name: "setTraitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "startAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "subUserAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "traitToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100695760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805560ff19600254166002556109a9908161006f8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081630337b3aa146107155750806304269d3314610696578063143c2a311461066f5780631959a002146106375780634e71d92d146104f45780635c975abb146104d057806361b512a714610445578063715018a6146103eb5780637a14eddb146103c45780638da5cb5b1461039c57806392f5ac811461034b578063939e25751461031e578063b827d002146102a057838163beae207f146101b757508063d4c3eea01461019a5763f2fde38b146100d557600080fd5b34610196576020366003190112610196576100ee610731565b906100f761074c565b6001600160a01b0391821692831561014457505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b503461019657826003193601126101965760209250549051908152f35b8281853461029c57602036600319011261029c5760208335936101d861086f565b6101e06108b3565b6101e861074c565b6064600254916101fe60ff8460081c16156107a4565b6102098715156107e2565b84516323b872dd60e01b815232918101919091523060248201526044810187905294859283919060181c6001600160a01b03165af19081156102935750610265575b5061010061ff001960025416176002556003556001805580f35b6102859060203d811161028c575b61027d818361081f565b810190610857565b508261024b565b503d610273565b513d85823e3d90fd5b5080fd5b509034610196578060031936011261019657610315906102be610731565b90602435916102cb61086f565b6102d36108b3565b6102db61074c565b6102ed60ff60025460081c16156107a4565b6001600160a01b0316855260056020528420805461030c908390610943565b90558254610943565b90556001805580f35b50503461029c578160031936011261029c57600254905160189190911c6001600160a01b03168152602090f35b833461039957602036600319011261039957610365610731565b61036d61074c565b600280546301000000600160b81b03191660189290921b6301000000600160b81b031691909117905580f35b80fd5b50503461029c578160031936011261029c57905490516001600160a01b039091168152602090f35b50503461029c578160031936011261029c5760209060ff60025460101c1690519015158152f35b833461039957806003193601126103995761040461074c565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50903461019657806003193601126101965761031590610463610731565b906024359161047061086f565b6104786108b3565b61048061074c565b61049260ff60025460081c16156107a4565b6001600160a01b03168086526005602052818620546104b3908411156107e2565b8552600560205284206104c7828254610966565b90558254610966565b50503461029c578160031936011261029c5760209060ff6002541690519015158152f35b5091903461029c578160031936011261029c5761050f61086f565b6105176108b3565b60025461052960ff8260081c16610909565b338352602090600582528284205415610605576003543385526005835283852054908181029181830414901517156105f25785549182156105df5790604486978786948851968795869463a9059cbb60e01b8652339086015204602484015260018060a01b039060181c165af180156105d25790600592916105b5575b50338452528120556001805580f35b6105cb90823d841161028c5761027d818361081f565b50386105a6565b50505051903d90823e3d90fd5b634e487b7160e01b865260128752602486fd5b634e487b7160e01b855260118652602485fd5b825162461bcd60e51b8152808601839052600c60248201526b4e6f7420656c696769626c6560a01b6044820152606490fd5b50503461029c57602036600319011261029c5760209181906001600160a01b0361065f610731565b1681526005845220549051908152f35b50503461029c578160031936011261029c5760209060ff60025460081c1690519015158152f35b50346101965782600319360112610196576106af61074c565b600254916106c260ff8460081c16610909565b60ff8360101c166106e05762ff000019831662010000176002558380f35b906020606492519162461bcd60e51b8352820152600f60248201526e105b1c9958591e48185b1b1bddd959608a1b6044820152fd5b84903461029c578160031936011261029c576020906003548152f35b600435906001600160a01b038216820361074757565b600080fd5b6000546001600160a01b0316330361076057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b156107ab57565b60405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481cdd185c9d1959608a1b6044820152606490fd5b156107e957565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761084157604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610747575180151581036107475790565b60ff6002541661087b57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6002600154146108c4576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b1561091057565b60405162461bcd60e51b815260206004820152600b60248201526a139bdd081cdd185c9d195960aa1b6044820152606490fd5b9190820180921161095057565b634e487b7160e01b600052601160045260246000fd5b919082039182116109505756fea26469706673582212204cae3bf375f5cd08b9d2f0f4fcd993662c0079f62b05941853cae93178bb272664736f6c63430008140033";

type AirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Airdrop__factory extends ContractFactory {
  constructor(...args: AirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Airdrop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Airdrop__factory {
    return super.connect(runner) as Airdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropInterface {
    return new Interface(_abi) as AirdropInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Airdrop {
    return new Contract(address, _abi, runner) as unknown as Airdrop;
  }
}
