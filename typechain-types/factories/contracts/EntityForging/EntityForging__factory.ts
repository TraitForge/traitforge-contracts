/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EntityForging,
  EntityForgingInterface,
} from "../../../contracts/EntityForging/EntityForging";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_traitForgeNft",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CancelledListingForForging",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newTokenid",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "parent1Id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "parent2Id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newEntropy",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "forgingFee",
        type: "uint256",
      },
    ],
    name: "EntityForged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ListedForForging",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListingForForging",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchListings",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct IEntityForging.Listing[]",
        name: "_listings",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "forgerTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mergerTokenId",
        type: "uint256",
      },
    ],
    name: "forgeWithListed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "forgingCounts",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "getListedTokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getListings",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct IEntityForging.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "listForForging",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listedTokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isListed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumListFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "contract ITraitForgeNft",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nukeFundAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oneYearInDays",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setMinimumListingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_nukeFundAddress",
        type: "address",
      },
    ],
    name: "setNukeFundAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setOneYearInDays",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxCut",
        type: "uint256",
      },
    ],
    name: "setTaxCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taxCut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100dc57601f61199338819003918201601f19168301916001600160401b038311848410176100e1578084926020946040528339810103126100dc57516001600160a01b0390818116908190036100dc57600160005560015460405192339082167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a81b0319163360ff60a01b1916176001556103e86004556301e133806005556000600655662386f26fc10000600755600280546001600160a01b03191691909117905561189b90816100f88239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c8063023f2dbe146114c35780632f3db9c4146114a25780633f4ba83a1461140657806346b582c7146113d757806352b58636146110365780635c448e9a146113b95780635c975abb14611393578063715018a61461133657806374858114146112a15780638456cb591461123f5780638da5cb5b146112165780639bc5f5a9146111f5578063a5bb19b2146111d7578063a80f99ec14611080578063a9b07c2614611062578063b6feadc814611036578063b7c916bb146107f2578063bc54d6d7146106d8578063be190468146106ba578063c023eed61461064b578063d56d229d14610622578063de74e57b146105c7578063ee9151ae1461059e578063f2fde38b146104d85763f77f27061461012f57600080fd5b346103e85761013d36611509565b90610146611577565b61014e6116f3565b8060005260209160088352604060002054600052600a8352604060002060405190610178826115be565b60018060a01b03918282541681526001820154868201526060600360ff60028501541615159384604085015201549101526104875780849160025416604051958680926331a9108f60e11b825287600483015260249889915afa80156103f4576101ee9160009161045a575b50821633146116a7565b600754831061040057610200846117f2565b84828260025416604051928380926306b6c00b60e01b82528960048301525afa9081156103f4576000916103c2575b5060ff600a808304061680151590816103a8575b5015610359576003900661030b57917fad9a746a334a8de4c0333b5452637bc5a53fe8dce405468ff37e62add0a0365e9391604093600361028560065461164f565b80600655865192610295846115be565b33845284840187815288850191600183526060860193888552600052600a8752896000209551166001600160601b0360a01b865416178555516001850155600284019051151560ff8019835416911617905551910155600654836000526008825284600020558351928352820152a16001600055005b60405162461bcd60e51b8152600481018390526021818701527f4f6e6c7920666f72676572732063616e206c69737420666f7220666f7267696e6044820152606760f81b6064820152608490fd5b608483876040519162461bcd60e51b83526004830152808201527f456e746974792068617320726561636865642069747320666f7267696e67206c6044820152631a5b5a5d60e21b6064820152fd5b905085600052600b845260ff604060002054161038610243565b90508281813d83116103ed575b6103d981836115f0565b810103126103e857513861022f565b600080fd5b503d6103cf565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260048101839052602d818701527f4665652073686f756c6420626520686967686572207468616e206d696e696d7560448201526c6d206c697374696e672066656560981b6064820152608490fd5b61047a9150843d8611610480575b61047281836115f0565b810190611688565b386101e4565b503d610468565b60405162461bcd60e51b815260048101859052602360248201527f546f6b656e20697320616c7265616479206c697374656420666f7220666f7267604482015262696e6760e81b6064820152608490fd5b346103e85760203660031901126103e8576004356001600160a01b03818116918290036103e85761050761151f565b811561054a57600154826001600160601b0360a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346103e85760003660031901126103e8576003546040516001600160a01b039091168152602090f35b346103e85760203660031901126103e857600435600052600a6020526080604060002060018060a01b0381541690600181015490600360ff600283015416910154916040519384526020840152151560408301526060820152f35b346103e85760003660031901126103e8576002546040516001600160a01b039091168152602090f35b346103e85760203660031901126103e85760043561066761151f565b612710811161067557600455005b60405162461bcd60e51b815260206004820152601a60248201527f546178206375742063616e6e6f742065786365656420313030250000000000006044820152606490fd5b346103e85760003660031901126103e8576020600754604051908152f35b346103e8576020806003193601126103e857600435906106f6611577565b6106fe6116f3565b6002546040516331a9108f60e11b815260048101849052906001600160a01b03908116908383602481855afa9081156103f45761074f936000926107d3575b501633149081156107c9575b506116a7565b8160005260088152604060002054600052600a815260ff60026040600020015416156107855761077e8261179a565b6001600055005b6064906040519062461bcd60e51b82526004820152601c60248201527f546f6b656e206e6f74206c697374656420666f7220666f7267696e67000000006044820152fd5b9050331484610749565b6107eb919250853d87116104805761047281836115f0565b908661073d565b6107fb36611509565b90610804611577565b61080c6116f3565b806000526008602052604060002054600052600a60205260406000209160405191610836836115be565b83546001600160a01b0316835260018401546020840152600284015460ff9081161580156040860152600390950154606090940193845293610fe25780151580610fd9575b15610f85576002546040516331a9108f60e11b8082526004820185905294916001600160a01b031690602081602481855afa9081156103f457600091610f66575b50336001600160a01b0390911603610f22576040516391785e6d60e01b80825260048201869052602082602481865afa9182156103f457600092610eed575b5060209060246040518095819382528860048301525afa9182156103f457600092610eb9575b5003610e7457828210908115610e6d5782915b15610e665783905b8260005260096020526040600020826000526020528660406000205416610e21575195863403610dc55761096f846117f2565b610978856117f2565b83600052600b6020526040600020805482610994818316611749565b60ff1990921691161790556002546040516306b6c00b60e01b81526004810187905290602090829060249082906001600160a01b03165afa9081156103f457600091610d93575b506003810615610d6157600a80839204061685600052600b6020526040600020805483610a09818316611749565b169060ff19161790558015159182610d45575b505015610d005760045490813402913483041434151715610cea57866127108304810311610cea57600254604051968752600487018590526001600160a01b031692602087602481875afa9384156103f4576000978895610cc8575b5060209060a4604051809a8193637e6405c160e01b83523360048401528a60248401528b6044840152608060648401528160848401525af19687156103f457600097610c94575b5060005260096020526040600020906000526020526040600020600160ff198254161790556000808080612710850460018060a01b03600354165af1610b0361175a565b5015610c4f5760009182918291829161271090048903906001600160a01b03165af1610b2d61175a565b5015610c0a57610b3c8161179a565b6002546040516306b6c00b60e01b81526004810185905290602090829060249082906001600160a01b03165afa9081156103f457600091610bb8575b507f13573c92238479c974d3ca29940fa5e5770386cd63a484a763d318424413d45a60408592602097825191825288820152a46001600055604051908152f35b90506020813d602011610c02575b81610bd3602093836115f0565b810103126103e857517f13573c92238479c974d3ca29940fa5e5770386cd63a484a763d318424413d45a610b78565b3d9150610bc6565b60405162461bcd60e51b815260206004820152601d60248201527f4661696c656420746f2073656e6420746f20466f726765204f776e65720000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f4661696c656420746f2073656e6420746f204e756b6546756e640000000000006044820152606490fd5b9096506020813d602011610cc0575b81610cb0602093836115f0565b810103126103e857519588610abf565b3d9150610ca3565b6020919550610ce390823d84116104805761047281836115f0565b9490610a78565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601b60248201527f666f726765506f74656e7469616c20696e73756666696369656e7400000000006044820152606490fd5b90915085600052600b6020526040600020541611158780610a1c565b60405162461bcd60e51b815260206004820152600a6024820152692737ba1036b2b933b2b960b11b6044820152606490fd5b90506020813d602011610dbd575b81610dae602093836115f0565b810103126103e85751886109db565b3d9150610da1565b60405162461bcd60e51b815260206004820152602e60248201527f4665652063616e6e6f74206265206c657373207468616e206f72206d6f72652060448201526d7468616e206d73672e76616c756560901b6064820152608490fd5b60405162461bcd60e51b815260206004820152601a60248201527f506172656e7473206861766520666f72676564206265666f72650000000000006044820152606490fd5b829061093c565b8391610934565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c696420746f6b656e2067656e65726174696f6e00000000000000006044820152606490fd5b9091506020813d602011610ee5575b81610ed5602093836115f0565b810103126103e857519087610921565b3d9150610ec8565b9091506020813d602011610f1a575b81610f09602093836115f0565b810103126103e857519060206108fb565b3d9150610efc565b606460405162461bcd60e51b815260206004820152602060248201527f43616c6c6572206d757374206f776e20746865206d657267657220746f6b656e6044820152fd5b610f7f915060203d6020116104805761047281836115f0565b876108bc565b60405162461bcd60e51b815260206004820152602660248201527f496e76616c696420746f6b656e2049443a20546f6b656e2049442063616e6e6f60448201526507420626520360d41b6064820152608490fd5b5081151561087b565b60405162461bcd60e51b815260206004820152602660248201527f466f72676572277320656e74697479206e6f74206c697374656420666f7220666044820152656f7267696e6760d01b6064820152608490fd5b346103e85760203660031901126103e85760043560005260086020526020604060002054604051908152f35b346103e85760003660031901126103e8576020600654604051908152f35b346103e85760003660031901126103e85760065460019081810190818111610cea576110ab82611612565b916110b960405193846115f0565b8083526110c8601f1991611612565b0160005b8181106111c0575050825b818111156111535782846040519060208083018184528451809152816040850195019160005b82811061110a5785870386f35b9091929382608088611146849a89516060809160018060a01b038151168452602081015160208501526040810151151560408501520151910152565b01979501939291016110fd565b806111bb916000526020600a81526003604060002060405192611175846115be565b81546001600160a01b031684528882015490840152600281015460ff1615156040840152015460608201526111aa828661165e565b526111b5818561165e565b5061164f565b6110d7565b6020906111cb61162a565b828287010152016110cc565b346103e85760003660031901126103e8576020600554604051908152f35b346103e85760203660031901126103e85761120e61151f565b600435600555005b346103e85760003660031901126103e8576001546040516001600160a01b039091168152602090f35b346103e85760003660031901126103e85761125861151f565b611260611577565b6001805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1005b346103e85760203660031901126103e8576112ba61162a565b50600435600052600a602052608060406000206003604051916112dc836115be565b80546001600160a01b031680845260018201546020808601918252600284015460ff161515604080880191825295909401546060968701908152855193845291519083015291511515928101929092525191810191909152f35b346103e85760003660031901126103e85761134f61151f565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346103e85760003660031901126103e857602060ff60015460a01c166040519015158152f35b346103e85760003660031901126103e8576020600454604051908152f35b346103e85760203660031901126103e857600435600052600b602052602060ff60406000205416604051908152f35b346103e85760003660031901126103e85761141f61151f565b60015460ff8160a01c16156114665760ff60a01b19166001556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1005b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b346103e85760203660031901126103e8576114bb61151f565b600435600755005b346103e85760203660031901126103e8576004356001600160a01b038116908190036103e8576114f161151f565b6001600160601b0360a01b6003541617600355600080f35b60409060031901126103e8576004359060243590565b6001546001600160a01b0316330361153357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff60015460a01c1661158657565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6080810190811067ffffffffffffffff8211176115da57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176115da57604052565b67ffffffffffffffff81116115da5760051b60200190565b60405190611637826115be565b60006060838281528260208201528260408201520152565b6000198114610cea5760010190565b80518210156116725760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b908160209103126103e857516001600160a01b03811681036103e85790565b156116ae57565b60405162461bcd60e51b815260206004820152601960248201527f43616c6c6572206d757374206f776e2074686520746f6b656e000000000000006044820152606490fd5b600260005414611704576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60ff1660ff8114610cea5760010190565b3d15611795573d9067ffffffffffffffff82116115da5760405191611789601f8201601f1916602001846115f0565b82523d6000602084013e565b606090565b60207fce72d1cb999da7e6c639c734e0f72369496a10e631fbe074ba058239a78652d29160008181526008835260408120548152600a83526003604082208281558260018201558260028201550155604051908152a1565b6005546000828152600c60205260408120549092918161181d5750508152600c602052604042912055565b810180911161185157421015611831575050565b8152600b6020526040812060ff198154169055600c602052604042912055565b634e487b7160e01b83526011600452602483fdfea2646970667358221220cb6a4c7867c928c1f63298685e1238f6bb31d550d02a995746c742e06a8cbdd764736f6c63430008140033";

type EntityForgingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntityForgingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntityForging__factory extends ContractFactory {
  constructor(...args: EntityForgingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _traitForgeNft: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_traitForgeNft, overrides || {});
  }
  override deploy(
    _traitForgeNft: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_traitForgeNft, overrides || {}) as Promise<
      EntityForging & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EntityForging__factory {
    return super.connect(runner) as EntityForging__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntityForgingInterface {
    return new Interface(_abi) as EntityForgingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EntityForging {
    return new Contract(address, _abi, runner) as unknown as EntityForging;
  }
}
