/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Trait, TraitInterface } from "../../../contracts/Trait/Trait";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimal",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60406080815234620003f15762000f4f803803806200001e81620003f6565b9283398101608082820312620003f15781516001600160401b039290838111620003f15782620000509183016200041c565b926020928383015190828211620003f1576200006e9184016200041c565b91858101519060ff82168203620003f1576060015194805192808411620002f15760038054946001938487811c97168015620003e6575b89881014620003d0578190601f978881116200037a575b508990888311600114620003135760009262000307575b505060001982841b1c191690841b1781555b8551918211620002f15760049586548481811c91168015620002e6575b89821014620002d15786811162000286575b5087908684116001146200021b579383949184926000956200020f575b50501b92600019911b1c19161783555b61ff006005549160081b169061ffff1916176005553315620001d0575060025490838201809211620001bb57506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a351610ac090816200048f8239f35b601190634e487b7160e01b6000525260246000fd5b60649285519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b01519350388062000131565b9190601f1984169288600052848a6000209460005b8c898383106200026e575050501062000253575b50505050811b01835562000141565b01519060f884600019921b161c191690553880808062000244565b86860151895590970196948501948893500162000230565b87600052886000208780860160051c8201928b8710620002c7575b0160051c019085905b828110620002ba57505062000114565b60008155018590620002aa565b92508192620002a1565b602288634e487b7160e01b6000525260246000fd5b90607f169062000102565b634e487b7160e01b600052604160045260246000fd5b015190503880620000d3565b90869350601f19831691856000528b6000209260005b8d8282106200036357505084116200034a575b505050811b018155620000e5565b015160001983861b60f8161c191690553880806200033c565b8385015186558a9790950194938401930162000329565b90915083600052896000208880850160051c8201928c8610620003c6575b918891869594930160051c01915b828110620003b6575050620000bc565b60008155859450889101620003a6565b9250819262000398565b634e487b7160e01b600052602260045260246000fd5b96607f1696620000a5565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620002f157604052565b919080601f84011215620003f15782516001600160401b038111620002f15760209062000452601f8201601f19168301620003f6565b92818452828287010111620003f15760005b8181106200047a57508260009394955001015290565b85810183015184820184015282016200046456fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461066257508163095ea7b31461063857816318160ddd1461061957816323b872dd1461054f578163313ce5671461052a57816339509351146104c357816342966c68146103515781635c975abb1461032d57816370a08231146102f657816395d89b41146101d7578163a457c2d71461012f57508063a9059cbb146100ff5763dd62ed3e146100b457600080fd5b346100fb57806003193601126100fb57806020926100d0610787565b6100d86107a2565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100fb57806003193601126100fb5760209061012861011e610787565b60243590336107b8565b5160018152f35b905082346101d457826003193601126101d45761014a610787565b918360243592338152600160205281812060018060a01b0386168252602052205490828210610183576020856101288585038733610988565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100fb57816003193601126100fb57805190828454600181811c908083169283156102ec575b60209384841081146102d9578388529081156102bd5750600114610268575b505050829003601f01601f191682019267ffffffffffffffff841183851017610255575082918261025192528261073e565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106102a9575050505083010185808061021f565b805488860183015293019284908201610293565b60ff1916878501525050151560051b840101905085808061021f565b634e487b7160e01b895260228a52602489fd5b91607f1691610200565b5050346100fb5760203660031901126100fb5760209181906001600160a01b0361031e610787565b16815280845220549051908152f35b5050346100fb57816003193601126100fb5760209060ff6005541690519015158152f35b8284346101d457602092836003193601126100fb5780359033156104765760ff600554166104205733835282855283832054908282106103d2575081903384528386520383832055806002540360025582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b845162461bcd60e51b8152908101869052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b835162461bcd60e51b8152908101859052602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b835162461bcd60e51b8152908101859052602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b8284346101d457816003193601126101d4576104dd610787565b338252600160209081528383206001600160a01b038316845290528282205460243581019290831061051757602084610128858533610988565b634e487b7160e01b815260118552602490fd5b5050346100fb57816003193601126100fb5760209060ff60055460081c169051908152f35b839150346100fb5760603660031901126100fb5761056b610787565b6105736107a2565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036105ad575b6020866101288787876107b8565b8482106105d657509183916105cb6020969561012895033383610988565b91939481935061059f565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100fb57816003193601126100fb576020906002549051908152f35b5050346100fb57806003193601126100fb57602090610128610658610787565b6024359033610988565b8490843461073a578260031936011261073a5782600354600181811c90808316928315610730575b60209384841081146102d9578388529081156102bd57506001146106da57505050829003601f01601f191682019267ffffffffffffffff841183851017610255575082918261025192528261073e565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83851061071c575050505083010185808061021f565b805488860183015293019284908201610706565b91607f169161068a565b8280fd5b6020808252825181830181905290939260005b82811061077357505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610751565b600435906001600160a01b038216820361079d57565b600080fd5b602435906001600160a01b038216820361079d57565b6001600160a01b0390811691821561093557169182156108e45760ff6005541661088c5760008281528060205260408120549180831061083857604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610a3957169182156109e95760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea26469706673582212209aa7f9c6b6007b307851a2fcc95a1a0c22595e86ad099ecd5458562a2dfb0cd664736f6c63430008140033";

type TraitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TraitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Trait__factory extends ContractFactory {
  constructor(...args: TraitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimal: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimal,
      _totalSupply,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimal: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimal,
      _totalSupply,
      overrides || {}
    ) as Promise<
      Trait & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Trait__factory {
    return super.connect(runner) as Trait__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TraitInterface {
    return new Interface(_abi) as TraitInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Trait {
    return new Contract(address, _abi, runner) as unknown as Trait;
  }
}
